name: Build
on:
  push:
    branches:
      - master
  pull_request:
  workflow_dispatch:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-22.04, windows-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.1-dev libayatana-appindicator3-dev librsvg2-dev

      - name: Rust setup
        uses: dtolnay/rust-toolchain@stable

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      - uses: pnpm/action-setup@v2
        with:
          version: latest

      - name: Sync node version and setup cache
        uses: actions/setup-node@v3
        with:
          node-version: 'current'
          cache: 'pnpm'

      - name: Install frontend dependencies
        run: pnpm install --frozen-lockfile

      - name: Update version
        run: pnpm run setVersion $(git describe --tags)

      - uses: Dreaming-Codes/tauri-build@next
        id: tauri_build
        env:
          TAURI_KEY_PASSWORD: ''
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}

      - uses: actions/upload-artifact@v3
        with:
          name: "artifacts-${{ matrix.platform }}"
          path: "${{ join(fromJSON(steps.tauri_build.outputs.artifacts), '\n') }}"

      - name: Get release tag
        if: github.ref == 'refs/heads/master'
        id: get_release_tag
        uses: actions-ecosystem/action-regex-match@v2
        with:
          text: ${{ github.event.head_commit.message }}
          regex: '(?<=release: )\d+.\d+.\d+'

      - name: Upload release
        if: github.ref == 'refs/heads/master' && steps.get_release_tag.outputs.match != ''
        uses: ncipollo/release-action@v1
        with:
          artifacts: "${{ join(fromJSON(steps.tauri_build.outputs.artifacts), '\n') }}"
          draft: true
          tag: ${{ steps.get_release_tag.outputs.match }}
          commit: ${{ github.event.workflow_run.head_sha }}
          makeLatest: true
          updateOnlyUnreleased: true
          allowUpdates: true